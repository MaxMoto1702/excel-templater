{
  "name": "Groovy-excel-builder",
  "tagline": "A Groovy DSL for Building Excel Files",
  "body": "# Excel Builder\r\n\r\n## Introduction\r\n\r\nExcel Builder позволяет просто и быстро строить Excel таблицы. \r\n\r\nExcel Builder разработан для использования в Java и Groovy.\r\n\r\nExcel Builder делает код постороения таблицы простым, прозрачным и читаемым.\r\n \r\nExcel Builder это обертка над [Apache POI](https://github.com/apache/poi).\r\n\r\n## Install\r\n\r\nДобавьте репозиторий в gradle проект:\r\n\r\n```groovy\r\nrepositories {\r\n    maven {\r\n        url \"http://repo.serebryanskiy.site/\"\r\n    }\r\n}\r\n```\r\n\r\nДобавьте библиотеку в зависимости проекта:\r\n\r\n```groovy\r\ndependencies {\r\n    compile 'maxmoto1702:excel-builder:1.0-RC1'\r\n}\r\n```\r\n\r\n## Features\r\n\r\n1. Конфигурирование билдера: `builder.config { ... }`.\r\n2. Добавление стилей в книгу: `style('style name') { cellStyle -> ... }`.\r\n3. Создание листа: `sheet(name: 'Лист 1', widthColumns: ['default', 25, ...]) { ... }`.\r\n4. Создание строки: `row(style: 'style name', height: 10)`.\r\n5. Создание ячейки: `cell(rowspan: 1, colspan: 1, style: 'style name') { ... }`.\r\n6. Создание книги: `builder.build { ... }`.\r\n\r\n## TODO\r\n\r\n1. Спрятать использование apache poi стилей и шрифтов под капот\r\n2. Добавить наследование стилей\r\n\r\n## Examples\r\n\r\n### Demo types\r\n\r\n```groovy\r\nbuilder.build {\r\n    sheet(name: \"Demo types\") {\r\n        row {\r\n            cell {\r\n                \"string value\"\r\n            }\r\n            cell {\r\n                // integer value\r\n                1\r\n            }\r\n            cell {\r\n                // date value\r\n                new Date()\r\n            }\r\n            cell {\r\n                \"dyna\" + \"mic\"\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n![Demo types](src/docs/images/example-1.png)\r\n\r\n### Demo styles\r\n\r\n```groovy\r\nbuilder.config {\r\n    style(\"FIRST_STYLE\") { CellStyle cellStyle ->\r\n        cellStyle.alignment = CellStyle.ALIGN_CENTER\r\n        cellStyle.borderBottom = CellStyle.BORDER_DASH_DOT\r\n        cellStyle\r\n    }\r\n    style(\"SECOND_STYLE\") { CellStyle cellStyle ->\r\n        cellStyle.alignment = CellStyle.ALIGN_CENTER\r\n        cellStyle\r\n    }\r\n}\r\nbuilder.build {\r\n    sheet(name: \"Demo styles\") {\r\n        row(style: \"FIRST_STYLE\") {\r\n            cell {\r\n                \"this cell has row style\"\r\n            }\r\n            cell {\r\n                \"this cell has row style\"\r\n            }\r\n            cell(style: \"SECOND_STYLE\") {\r\n                \"this cell has row style and cell style\"\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n![Demo types](src/docs/images/example-2.png)\r\n\r\n### Demo spans\r\n\r\n```groovy\r\nbuilder.build {\r\n    sheet(name: \"Demo spans\") {\r\n        row {\r\n            cell(colspan: 2) {\r\n                \"cell has width 2 columns\"\r\n            }\r\n            cell(rowspan: 2, style: wrap) {\r\n                \"cell has height 2 rows\"\r\n            }\r\n            cell(colspan: 2, rowspan: 2, style: wrap) {\r\n                \"cell has heigth 2 rows and width 2 columns\"\r\n            }\r\n        }\r\n        // this row not necessary, this row show only dummy-row\r\n        row { /* dummy */ }\r\n    }\r\n}\r\n```\r\n\r\n![Demo types](src/docs/images/example-3.png)\r\n\r\n### Demo config height and width\r\n\r\n```groovy\r\nbuilder.build {\r\n    sheet(name: \"Demo config height and width\", widthColumns: ['default', 25, 30]) {\r\n        row(height: 10) {\r\n            cell {\r\n                \"this row has height 30 and default width\"\r\n            }\r\n        }\r\n        row {\r\n            cell { /* dummy */ }\r\n            cell(width: 30) {\r\n                \"this column has width 30\"\r\n            }\r\n            cell(width: 50) {\r\n                \"this column has width 35\"\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n![Demo types](src/docs/images/example-4.png)\r\n\r\n### Demo dynamic data\r\n\r\n```groovy\r\nbuilder.build {\r\n    sheet(name: \"Demo dynamic data\", widthColumns: [12, 12]) {\r\n        def data1 = [\r\n            [\"value 1\", \"value 2\"],\r\n            [\"value 3\", \"value 4\"],\r\n            [\"value 5\", \"value 6\"]\r\n        ]\r\n        \r\n        for (def rowData : data1) {\r\n            row {\r\n                for (def cellData : rowData) {\r\n                    cell {\r\n                        cellData\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        row { /* dummy */ }\r\n        \r\n        def data2 = [\r\n            [prop1: \"row 1 value 1\", prop2: \"row 1 value 2\"],\r\n            [prop1: \"row 2 value 1\", prop2: \"row 2 value 2\"],\r\n            [prop1: \"row 3 value 1\", prop2: \"row 3 value 2\"],\r\n            [prop1: null, prop2: \"row 4 value 2\"]\r\n        ]\r\n        \r\n        for (def rowData : data2) {\r\n            row {\r\n                cell(colspan: rowData.prop ? 1 : 2) {\r\n                    rowData.prop2\r\n                }\r\n                if (rowData.prop) {\r\n                    cell {\r\n                        rowData.prop1\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n![Demo Demo dynamic data](src/docs/images/example-5.png)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}